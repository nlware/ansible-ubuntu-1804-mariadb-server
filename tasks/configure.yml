# tasks file for ubuntu-1804-mariadb-server
---
- name: configure | set root password
  command: >
    mysql \
      --database=mysql \
      -e "UPDATE `user` SET `password` = PASSWORD('{{ ubuntu_1804_mariadb_server_root_password }}') WHERE `user` = 'root'; SELECT ROW_COUNT();" \
      --skip-column-names
  register: rows_affected
  changed_when: "rows_affected.stdout != '0'"

- name: configure | set root password | flush privileges
  command: mysql --database=mysql -e "FLUSH PRIVILEGES;"
  when: "rows_affected.stdout != '0'"

- name: configure | create certificate directory
  file:
    path: /etc/mysql/ssl
    state: directory
    mode: 0700
  when: "ubuntu_1804_mariadb_server_certificates_present | length > 0"

- name: configure | delete certificate files
  file:
    path: "/etc/mysql/ssl/{{ item }}.pem"
    state: absent
  with_items: "{{ ubuntu_1804_mariadb_server_certificates_absent }}"
  notify: restart mariadb-server

- name: configure | copy certificate files
  copy:
    src: "{{ item.value }}"
    dest: "/etc/mysql/ssl/{{ item.key }}.pem"
    mode: 0600
  with_dict: "{{ ubuntu_1804_mariadb_server_certificates_present }}"
  notify: restart mariadb-server

- name: configure | delete (additional) configuration files
  file:
    path: "/etc/mysql/mariadb.conf.d/{{ item }}.cnf"
    state: absent
  with_items: "{{ ubuntu_1804_mariadb_server_configuration_files_absent }}"
  notify: restart mariadb-server

- name: configure | copy (additional) configuration files
  template:
    src: "{{ item.value }}"
    dest: "/etc/mysql/mariadb.conf.d/{{ item.key }}.cnf"
  with_dict: "{{ ubuntu_1804_mariadb_server_configuration_files_present }}"
  notify: restart mariadb-server
